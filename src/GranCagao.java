
import com.sun.glass.events.KeyEvent;
import java.awt.Color;
import java.awt.Graphics2D;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import javax.swing.Timer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author alvaro
 */
public class GranCagao extends javax.swing.JFrame {

    /**
     * Creates new form GranCagao
     */
    //Tamaño pantalla
    int anchoPantalla = 600;
    int altoPantalla = 400;
    //declaro el buffer
     BufferedImage buffer = null;
    //Declaro a el menda
     ElMenda miMenda = new ElMenda(anchoPantalla);
     //opciones para ir derecha o izquierda
      boolean pulsadaDerecha = false;
    boolean pulsadaIzquierda = false;
    // Array de las palomas y su velocidad
     ArrayList<Paloma> listaPaloma = new ArrayList();
    int velocidadPaloma = 1;
     //temporizador del juego
      Timer temporizador = new Timer(10, new ActionListener() {

        @Override
        public void actionPerformed(ActionEvent e) {
            blucleDelJuego();
        }
    });
    
    
    
    public GranCagao() {
        initComponents();
        
         // cambiamos las dimensiones de la ventana
        this.setSize(anchoPantalla, altoPantalla + 40);

        // creamos el buffer a partir del jPanel
        buffer = (BufferedImage) jPanel1.createImage(anchoPantalla, altoPantalla + 40);
        buffer.createGraphics();
        // inicio el juego
        temporizador.start();
        // posicionar al menda abajo del todo
        miMenda.setX(anchoPantalla / 2);
        miMenda.setY(altoPantalla - miMenda.imagenMenda.getHeight(null));
        
        
         //inicializo el arrayList de la paloma
        for (int j = 0; j < 2; j++) {
            for (int i = 0; i < 5; i++) {
                Paloma p = new Paloma();
                p.setX(i * p.ancho + 20);
                p.setY(p.ancho * j);
                listaPaloma.add(p);
            }
        }
        
        
    }
     private void pintaPaloma(Graphics2D g2) {

        
        
        //uso una variable buleana y la inicializo en false
        boolean cambia = false;

        for (int i = 0; i < listaPaloma.size(); i++) {
            Paloma p = listaPaloma.get(i);
            p.setX(p.getX() + velocidadPaloma);
            if ((p.getX() + p.ancho) > anchoPantalla) {

                cambia = true;
            }
            if (p.getX() <= 0) {
                cambia = true;
            }
            g2.drawImage(p.imagenP1, p.getX(), p.getY(), null);
        }
        // para que cambie de direccion
        if (cambia) {
            velocidadPaloma = -velocidadPaloma;
            //para que baje
            //for (int i = 0; i < listaPaloma.size(); i++) {
              //  Paloma p = listaPaloma.get(i);
               // p.setY(p.getY() + p.ancho / 2);
            //}
        }
    }

    
    //pinta al menda le permite que se mueva y a una velocidad
     private void pintaMenda(Graphics2D g2) {

        if (pulsadaIzquierda) {
            miMenda.setX(miMenda.getX() - 3);
        } else if (pulsadaDerecha) {
            miMenda.setX(miMenda.getX() + 3);
        }
        g2.drawImage(miMenda.imagenMenda, miMenda.getX(), miMenda.getY(), null);
    }
     //bucle del juego
      private void blucleDelJuego() {
        //primero apunto al buffer
        Graphics2D g2 = (Graphics2D) buffer.getGraphics();
        //pinto el rectangulo negro del tamaño de la ventana
        g2.setColor(Color.BLACK);
        g2.fillRect(0, 0, anchoPantalla, altoPantalla);
        /////////////////////////////////////////////////////////
        ////////////////CODIGO DEL JUEGO/////////////////
        pintaPaloma(g2);
        pintaMenda(g2);
        
        //apunto al jPanel y dubujo el buffer sobre el jPanel
        g2 = (Graphics2D) jPanel1.getGraphics();
        g2.drawImage(buffer, 0, 0, null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 315, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//si presionas la flecha izquierda
    //se intercalan true y false para que no se pare al pulsar la otra flecha
    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_LEFT) {
            pulsadaIzquierda = true;
            pulsadaDerecha = false;
        }

        if (evt.getKeyCode() == KeyEvent.VK_RIGHT) {
            pulsadaIzquierda = false;
            pulsadaDerecha = true;
        }
    }//GEN-LAST:event_formKeyPressed
//cuando no esta presionado se queda quieto
    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
         if (evt.getKeyCode() != KeyEvent.VK_SPACE) {
            pulsadaIzquierda = false;
            pulsadaDerecha = false;
        }
    }//GEN-LAST:event_formKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GranCagao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GranCagao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GranCagao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GranCagao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GranCagao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
